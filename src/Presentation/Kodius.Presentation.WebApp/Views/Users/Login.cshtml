@model LoginModel
@{
    ViewData["Title"] = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var error = ViewBag.Error;
}

<h1>Login</h1>

@if (error != null)
{
<div class="alert alert-danger alert-dismissible fade show" role="alert">
  <strong>Error!</strong> @error
  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>
}

@using (Html.BeginForm("Login", "Users", FormMethod.Post, new { @class = "needs-validation, data-form", @novalidate = "" }))
{
    @Html.AntiForgeryToken()
    <div class="form-group row">
        <label class="col-sm-2 col-form-label" for="email">Email</label>
        <div class="col-md-5">
            <input class="form-control"
               type="email"
               name="Email"
               id="email"
               required
               value="@Model.Email">
            <div class="valid-feedback">
                Looks good!
            </div>
            <div class="invalid-feedback">
                Please choose a username.
            </div>
        </div>
    </div>

    <div class="form-group row">
        <label class="col-sm-2 col-form-label" for="password">Password</label>
        <div class="col-md-5">
            <input class="form-control"
               type="password"
               name="Password"
               id="password"
               required
               value="">
        </div>
    </div>

    <div class="form-group row">
        <div class="col-sm-10">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
    </div>
}


@section scripts{
    <script>
        (function() {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
                .forEach(function(form) {
                    form.addEventListener('submit', function(event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }

                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
}

