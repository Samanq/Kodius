@using amadeus.resources
@model FlightSearchModel
@{
    ViewData["Title"] = "Flights";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var error = ViewBag.Error;
    Dictionary<string, string> cities = ViewBag.Cities;
    FlightOffer[] flightOffers = ViewBag.Flights;

}
<style>
    .card{
        margin-bottom:10px;
    }
</style>
<h1 class="display-4">Search Flights</h1>

@if (error != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>Error!</strong> @error
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@using (Html.BeginForm("Index", "Flights", FormMethod.Post, new { @class = "needs-validation data-form", @novalidate = "" }))
{
    @Html.AntiForgeryToken()
    <div class="form-group row">
        <label class="col-sm-2 col-form-label" for="date">Date</label>
        <div class="col-md-5">
            <input class="form-control"
               type="date"
               name="Date"
               id="date"
               required
               value="@Model.Date.Date">
            <div class="valid-feedback">
                Looks good!
            </div>
            <div class="invalid-feedback">
                Please choose a username.
            </div>
        </div>
    </div>
    <div class="form-group row">
        <label class="col-sm-2 col-form-label" for="origin">Origin</label>
        <div class="col-md-5">
            <select class="form-select" id="origin" name="Origin" required>
                <option selected disabled value="">Choose...</option>
                @foreach (var city in cities)
                {
                    <option value="@city.Value">@city.Key.ToUpper()</option>
                }
            </select>
            <div class="invalid-feedback">
                Please choose a origin.
            </div>
        </div>
    </div>
    <div class="form-group row">
        <label class="col-sm-2 col-form-label" for="origin">Destination</label>
        <div class="col-md-5">
            <select class="form-select" id="destination" name="Destination" required>
                <option selected disabled value="">Choose...</option>
                @foreach (var city in cities)
                {
                    <option value="@city.Value">@city.Key.ToUpper()</option>
                }
            </select>
            <div class="invalid-feedback">
                Please choose a destination.
            </div>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-sm-10">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </div>
}
<hr />

<div>
    @if (flightOffers != null)
    {
        <h2>Flights from @Model.Origin to @Model.Destination</h2>

        @foreach (var item in flightOffers)
        {
            Itineraries itinerary = item.itineraries.FirstOrDefault();
            Segment segment = @itinerary.segments.FirstOrDefault();

            <div class="card">
                <h5 class="card-header">@segment.departure.iataCode to @segment.arrival.iataCode</h5>
                <div class="card-body">
                    <h5 class="card-title">Departure Date: @segment.departure.at - Arrival Date : @segment.arrival.at</h5>
                    <p class="card-text">Duration = @itinerary.duration</p>
                    <p class="card-text">Flight Number = @segment.number</p>
                    <p class="card-text">Aircraft = @segment.aircraft.code</p>
                    <p>price = <b>@item.price.total</b> @item.price.currency</p>
                    <a href="#" class="btn btn-primary">Add to Folder</a>
                </div>
            </div>
        }
    }


</div>

@section scripts{
    <script>
        (function() {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
                .forEach(function(form) {
                    form.addEventListener('submit', function(event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }

                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
}